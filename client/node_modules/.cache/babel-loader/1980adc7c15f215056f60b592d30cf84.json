{"ast":null,"code":"var _jsxFileName = \"/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/src/sections/Quotes/Quotes.tsx\";\nimport React from 'react';\nimport \"./styles/Quotes.css\";\nimport { List, Avatar, Button, Spin, Alert } from 'antd';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QuotesSkeleton } from './components/QuotesSkeleton';\nconst QUOTES = gql`\n  query Quotes {\n    quotes {\n      id\n      quote\n      author\n      category\n      period\n      image\n    }\n  }\n`;\nconst DELETE_QUOTE = gql`\n  mutation DeleteQuote($id: ID!) {\n    deleteQuote(id: $id) {\n      id\n    }\n  }\n`;\nexport const Quotes = ({\n  title\n}) => {\n  const {\n    data,\n    refetch,\n    loading,\n    error\n  } = useQuery(QUOTES);\n  const [deleteQuote, {\n    loading: deleteQuoteLoading,\n    error: deleteQuoteError\n  }] = useMutation(DELETE_QUOTE);\n\n  const handleDeleteQuote = async id => {\n    await deleteQuote({\n      variables: {\n        id\n      }\n    });\n    refetch();\n  };\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"quotes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(QuotesSkeleton, {\n      title: title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n  if (error) {\n    return React.createElement(\"div\", {\n      className: \"quotes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(QuotesSkeleton, {\n      title: title,\n      error: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n  const quotes = data ? data.quotes : null;\n  const deleteQuoteErrorAlert = deleteQuoteError ? React.createElement(Alert, {\n    type: \"error\",\n    message: \"Uh oh! Something went wrong in the deletion process. Please try again!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }) : null;\n  const quotesList = quotes ? React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: quotes,\n    renderItem: quote => React.createElement(List.Item, {\n      actions: [React.createElement(Button, {\n        type: \"ghost\",\n        onClick: () => handleDeleteQuote(quote.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Delete\")],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      title: quote.quote,\n      description: quote.author,\n      avatar: React.createElement(Avatar, {\n        src: quote.image,\n        size: 48,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : null;\n  return React.createElement(\"div\", {\n    className: \"quotes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Spin, {\n    spinning: deleteQuoteLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, title), quotesList, deleteQuoteErrorAlert));\n};","map":{"version":3,"sources":["/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/src/sections/Quotes/Quotes.tsx"],"names":["React","List","Avatar","Button","Spin","Alert","gql","useQuery","useMutation","QuotesSkeleton","QUOTES","DELETE_QUOTE","Quotes","title","data","refetch","loading","error","deleteQuote","deleteQuoteLoading","deleteQuoteError","handleDeleteQuote","id","variables","quotes","deleteQuoteErrorAlert","quotesList","quote","author","image"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./styles/Quotes.css\";\nimport { List, Avatar, Button, Spin, Alert } from 'antd';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Quotes as QuotesData } from './__generated__/Quotes';\nimport { DeleteQuote as DeleteQuoteData, DeleteQuoteVariables } from './__generated__/DeleteQuote';\nimport { QuotesSkeleton } from './components/QuotesSkeleton';\n\nconst QUOTES = gql`\n  query Quotes {\n    quotes {\n      id\n      quote\n      author\n      category\n      period\n      image\n    }\n  }\n`;\n\nconst DELETE_QUOTE = gql`\n  mutation DeleteQuote($id: ID!) {\n    deleteQuote(id: $id) {\n      id\n    }\n  }\n`;\n\ninterface Props {\n  title: string;\n}\n\nexport const Quotes = ({ title }: Props) => {\n  const { data, refetch, loading, error } = useQuery<QuotesData>(QUOTES);\n\n  const [\n    deleteQuote, \n    { loading: deleteQuoteLoading, error: deleteQuoteError }\n  ] = useMutation<DeleteQuoteData, DeleteQuoteVariables>(DELETE_QUOTE);\n\n  const handleDeleteQuote = async (id: string) => {\n    await deleteQuote({ variables: { id }});\n    refetch();\n  }\n\n  if (loading) {\n    return (\n      <div className=\"quotes\">\n        <QuotesSkeleton title={title}/>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"quotes\">\n        <QuotesSkeleton title={title} error />\n      </div>\n    )\n  }\n  \n  const quotes = data ? data.quotes : null;\n\n  const deleteQuoteErrorAlert = deleteQuoteError ? (\n    <Alert \n      type=\"error\"\n      message=\"Uh oh! Something went wrong in the deletion process. Please try again!\"\n    />\n  ) : null;\n\n  const quotesList = quotes ? (\n        <List \n          itemLayout=\"horizontal\"\n          dataSource={quotes}\n          renderItem={quote => (\n            <List.Item\n              actions={[\n                <Button type=\"ghost\" onClick={() => handleDeleteQuote(quote.id)}>\n                  Delete\n                </Button>\n              ]}\n            >\n              <List.Item.Meta \n                title={quote.quote}\n                description={quote.author}\n                avatar={<Avatar src={quote.image} size={48} />}\n              />\n            </List.Item>\n          )}\n        />\n  ) : null;\n  return (\n    <div className=\"quotes\">\n      <Spin spinning={deleteQuoteLoading}>\n        <h2>{title}</h2>\n        {quotesList}\n        {deleteQuoteErrorAlert}\n      </Spin>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}