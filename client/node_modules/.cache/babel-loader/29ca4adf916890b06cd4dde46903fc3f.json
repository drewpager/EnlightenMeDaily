{"ast":null,"code":"import _regeneratorRuntime from\"/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  mutation DeleteQuote($id: ID!) {\\n    deleteQuote(id: $id) {\\n      id\\n    }\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  query Quotes {\\n    quotes {\\n      id\\n      quote\\n      author\\n      category\\n      period\\n      image\\n    }\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import\"./styles/Quotes.css\";import{List,Avatar,Button,Spin,Alert}from'antd';import{gql}from'apollo-boost';import{useQuery,useMutation}from'@apollo/react-hooks';import{QuotesSkeleton}from'./components/QuotesSkeleton';var QUOTES=gql(_templateObject());var DELETE_QUOTE=gql(_templateObject2());export var Quotes=function Quotes(_ref){var title=_ref.title;var _useQuery=useQuery(QUOTES),data=_useQuery.data,refetch=_useQuery.refetch,loading=_useQuery.loading,error=_useQuery.error;var _useMutation=useMutation(DELETE_QUOTE),_useMutation2=_slicedToArray(_useMutation,2),deleteQuote=_useMutation2[0],_useMutation2$=_useMutation2[1],deleteQuoteLoading=_useMutation2$.loading,deleteQuoteError=_useMutation2$.error;var handleDeleteQuote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(id){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return deleteQuote({variables:{id:id}});case 2:refetch();case 3:case\"end\":return _context.stop();}}},_callee);}));return function handleDeleteQuote(_x){return _ref2.apply(this,arguments);};}();if(loading){return React.createElement(\"div\",{className:\"quotes\"},React.createElement(QuotesSkeleton,{title:title}));}if(error){return React.createElement(\"div\",{className:\"quotes\"},React.createElement(QuotesSkeleton,{title:title,error:true}));}var quotes=data?data.quotes:null;var deleteQuoteErrorAlert=deleteQuoteError?React.createElement(Alert,{type:\"error\",message:\"Uh oh! Something went wrong in the deletion process. Please try again!\"}):null;var quotesList=quotes?React.createElement(List,{itemLayout:\"horizontal\",dataSource:quotes,renderItem:function renderItem(quote){return React.createElement(List.Item,{actions:[React.createElement(Button,{type:\"ghost\",onClick:function onClick(){return handleDeleteQuote(quote.id);}},\"Delete\")]},React.createElement(List.Item.Meta,{title:quote.quote,description:quote.author,avatar:React.createElement(Avatar,{src:quote.image,size:48})}));}}):null;return React.createElement(\"div\",{className:\"quotes\"},React.createElement(Spin,{spinning:deleteQuoteLoading},React.createElement(\"h2\",null,title),quotesList,deleteQuoteErrorAlert));};","map":{"version":3,"sources":["/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/src/sections/Quotes/Quotes.tsx"],"names":["React","List","Avatar","Button","Spin","Alert","gql","useQuery","useMutation","QuotesSkeleton","QUOTES","DELETE_QUOTE","Quotes","title","data","refetch","loading","error","deleteQuote","deleteQuoteLoading","deleteQuoteError","handleDeleteQuote","id","variables","quotes","deleteQuoteErrorAlert","quotesList","quote","author","image"],"mappings":"ghCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,qBAAP,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,MAAvB,CAA+BC,IAA/B,CAAqCC,KAArC,KAAkD,MAAlD,CACA,OAASC,GAAT,KAAoB,cAApB,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,qBAAtC,CAGA,OAASC,cAAT,KAA+B,6BAA/B,CAEA,GAAMC,CAAAA,MAAM,CAAGJ,GAAH,mBAAZ,CAaA,GAAMK,CAAAA,YAAY,CAAGL,GAAH,oBAAlB,CAYA,MAAO,IAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAsB,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,eACAN,QAAQ,CAAaG,MAAb,CADR,CAClCI,IADkC,WAClCA,IADkC,CAC5BC,OAD4B,WAC5BA,OAD4B,CACnBC,OADmB,WACnBA,OADmB,CACVC,KADU,WACVA,KADU,kBAMtCT,WAAW,CAAwCG,YAAxC,CAN2B,8CAIxCO,WAJwC,kDAK7BC,kBAL6B,gBAKtCH,OALsC,CAKFI,gBALE,gBAKTH,KALS,CAQ1C,GAAMI,CAAAA,iBAAiB,2FAAG,iBAAOC,EAAP,wIAClBJ,CAAAA,WAAW,CAAC,CAAEK,SAAS,CAAE,CAAED,EAAE,CAAFA,EAAF,CAAb,CAAD,CADO,QAExBP,OAAO,GAFiB,sDAAH,kBAAjBM,CAAAA,iBAAiB,6CAAvB,CAKA,GAAIL,OAAJ,CAAa,CACX,MACE,4BAAK,SAAS,CAAC,QAAf,EACE,oBAAC,cAAD,EAAgB,KAAK,CAAEH,KAAvB,EADF,CADF,CAKD,CAED,GAAII,KAAJ,CAAW,CACT,MACE,4BAAK,SAAS,CAAC,QAAf,EACE,oBAAC,cAAD,EAAgB,KAAK,CAAEJ,KAAvB,CAA8B,KAAK,KAAnC,EADF,CADF,CAKD,CAED,GAAMW,CAAAA,MAAM,CAAGV,IAAI,CAAGA,IAAI,CAACU,MAAR,CAAiB,IAApC,CAEA,GAAMC,CAAAA,qBAAqB,CAAGL,gBAAgB,CAC5C,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,OAAO,CAAC,wEAFV,EAD4C,CAK1C,IALJ,CAOA,GAAMM,CAAAA,UAAU,CAAGF,MAAM,CACnB,oBAAC,IAAD,EACE,UAAU,CAAC,YADb,CAEE,UAAU,CAAEA,MAFd,CAGE,UAAU,CAAE,oBAAAG,KAAK,QACf,qBAAC,IAAD,CAAM,IAAN,EACE,OAAO,CAAE,CACP,oBAAC,MAAD,EAAQ,IAAI,CAAC,OAAb,CAAqB,OAAO,CAAE,yBAAMN,CAAAA,iBAAiB,CAACM,KAAK,CAACL,EAAP,CAAvB,EAA9B,WADO,CADX,EAOE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX,EACE,KAAK,CAAEK,KAAK,CAACA,KADf,CAEE,WAAW,CAAEA,KAAK,CAACC,MAFrB,CAGE,MAAM,CAAE,oBAAC,MAAD,EAAQ,GAAG,CAAED,KAAK,CAACE,KAAnB,CAA0B,IAAI,CAAE,EAAhC,EAHV,EAPF,CADe,EAHnB,EADmB,CAoBrB,IApBJ,CAqBA,MACE,4BAAK,SAAS,CAAC,QAAf,EACE,oBAAC,IAAD,EAAM,QAAQ,CAAEV,kBAAhB,EACE,8BAAKN,KAAL,CADF,CAEGa,UAFH,CAGGD,qBAHH,CADF,CADF,CASD,CApEM","sourcesContent":["import React from 'react';\nimport \"./styles/Quotes.css\";\nimport { List, Avatar, Button, Spin, Alert } from 'antd';\nimport { gql } from 'apollo-boost';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Quotes as QuotesData } from './__generated__/Quotes';\nimport { DeleteQuote as DeleteQuoteData, DeleteQuoteVariables } from './__generated__/DeleteQuote';\nimport { QuotesSkeleton } from './components/QuotesSkeleton';\n\nconst QUOTES = gql`\n  query Quotes {\n    quotes {\n      id\n      quote\n      author\n      category\n      period\n      image\n    }\n  }\n`;\n\nconst DELETE_QUOTE = gql`\n  mutation DeleteQuote($id: ID!) {\n    deleteQuote(id: $id) {\n      id\n    }\n  }\n`;\n\ninterface Props {\n  title: string;\n}\n\nexport const Quotes = ({ title }: Props) => {\n  const { data, refetch, loading, error } = useQuery<QuotesData>(QUOTES);\n\n  const [\n    deleteQuote, \n    { loading: deleteQuoteLoading, error: deleteQuoteError }\n  ] = useMutation<DeleteQuoteData, DeleteQuoteVariables>(DELETE_QUOTE);\n\n  const handleDeleteQuote = async (id: string) => {\n    await deleteQuote({ variables: { id }});\n    refetch();\n  }\n\n  if (loading) {\n    return (\n      <div className=\"quotes\">\n        <QuotesSkeleton title={title}/>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"quotes\">\n        <QuotesSkeleton title={title} error />\n      </div>\n    )\n  }\n  \n  const quotes = data ? data.quotes : null;\n\n  const deleteQuoteErrorAlert = deleteQuoteError ? (\n    <Alert \n      type=\"error\"\n      message=\"Uh oh! Something went wrong in the deletion process. Please try again!\"\n    />\n  ) : null;\n\n  const quotesList = quotes ? (\n        <List \n          itemLayout=\"horizontal\"\n          dataSource={quotes}\n          renderItem={quote => (\n            <List.Item\n              actions={[\n                <Button type=\"ghost\" onClick={() => handleDeleteQuote(quote.id)}>\n                  Delete\n                </Button>\n              ]}\n            >\n              <List.Item.Meta \n                title={quote.quote}\n                description={quote.author}\n                avatar={<Avatar src={quote.image} size={48} />}\n              />\n            </List.Item>\n          )}\n        />\n  ) : null;\n  return (\n    <div className=\"quotes\">\n      <Spin spinning={deleteQuoteLoading}>\n        <h2>{title}</h2>\n        {quotesList}\n        {deleteQuoteErrorAlert}\n      </Spin>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}