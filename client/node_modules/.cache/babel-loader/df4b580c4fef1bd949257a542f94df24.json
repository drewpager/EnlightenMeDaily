{"ast":null,"code":"import _slicedToArray from\"/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import'./styles/index.css';import ReactDOM from'react-dom';import ApolloClient from'apollo-boost';import{ApolloProvider}from'@apollo/react-hooks';import'./styles/index.css';import{Home,Create,Quote,Quotes,NotFound,User,Login,Landing,Policy}from'./sections';import*as serviceWorker from'./serviceWorker';import{Layout}from'antd';var client=new ApolloClient({uri:'/api'});var initialViewer={_id:null,token:null,avatar:null,didRequest:false};var App=function App(){var _useState=useState(initialViewer),_useState2=_slicedToArray(_useState,2),viewer=_useState2[0],setViewer=_useState2[1];return React.createElement(Router,null,React.createElement(Layout,{id:\"app\"},React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/\",component:Landing}),React.createElement(Route,{exact:true,path:\"/login\",render:function render(props){return React.createElement(Login,Object.assign({},props,{setViewer:setViewer}));}}),React.createElement(Route,{exact:true,path:\"/privacy-policy\",component:Policy}),React.createElement(Route,{exact:true,path:\"/Home\",component:Home}),React.createElement(Route,{exact:true,path:\"/create\",component:Create}),React.createElement(Route,{exact:true,path:\"/quote/:id\",component:Quote}),React.createElement(Route,{exact:true,path:\"/quotes/:category?\",component:Quotes}),React.createElement(Route,{exact:true,path:\"/user/:id\",component:User}),React.createElement(Route,{component:NotFound}))));};ReactDOM.render(React.createElement(ApolloProvider,{client:client},React.createElement(App,null)),document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/drewpage/Desktop/CODE/EnlightenMeDaily/client/src/index.tsx"],"names":["React","useState","BrowserRouter","Router","Route","Switch","ReactDOM","ApolloClient","ApolloProvider","Home","Create","Quote","Quotes","NotFound","User","Login","Landing","Policy","serviceWorker","Layout","client","uri","initialViewer","_id","token","avatar","didRequest","App","viewer","setViewer","props","render","document","getElementById","unregister"],"mappings":"uIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,KAAuD,kBAAvD,CACA,MAAO,oBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,cAAzB,CACA,OAASC,cAAT,KAA+B,qBAA/B,CACA,MAAO,oBAAP,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,KAAvB,CAA8BC,MAA9B,CAAsCC,QAAtC,CAAgDC,IAAhD,CAAsDC,KAAtD,CAA6DC,OAA7D,CAAsEC,MAAtE,KAAoF,YAApF,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,OAASC,MAAT,KAAuB,MAAvB,CAGA,GAAMC,CAAAA,MAAM,CAAG,GAAIb,CAAAA,YAAJ,CAAiB,CAC9Bc,GAAG,CAAE,MADyB,CAAjB,CAAf,CAIA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,IADe,CAEpBC,KAAK,CAAE,IAFa,CAGpBC,MAAM,CAAE,IAHY,CAIpBC,UAAU,CAAE,KAJQ,CAAtB,CAOA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACY1B,QAAQ,CAASqB,aAAT,CADpB,wCACTM,MADS,eACDC,SADC,eAGhB,MACA,qBAAC,MAAD,MACE,oBAAC,MAAD,EAAQ,EAAE,CAAC,KAAX,EACE,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEb,OAAjC,EADF,CAEE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,CAA2B,MAAM,CAAE,gBAAAc,KAAK,QAAI,qBAAC,KAAD,kBAAWA,KAAX,EAAkB,SAAS,CAAED,SAA7B,GAAJ,EAAxC,EAFF,CAGE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,iBAAlB,CAAoC,SAAS,CAAEZ,MAA/C,EAHF,CAIE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,OAAlB,CAA0B,SAAS,CAAER,IAArC,EAJF,CAKE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,CAA4B,SAAS,CAAEC,MAAvC,EALF,CAME,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,YAAlB,CAA+B,SAAS,CAAEC,KAA1C,EANF,CAOE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,oBAAlB,CAAuC,SAAS,CAAEC,MAAlD,EAPF,CAQE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,WAAlB,CAA8B,SAAS,CAAEE,IAAzC,EARF,CASE,oBAAC,KAAD,EAAO,SAAS,CAAED,QAAlB,EATF,CADF,CADF,CADA,CAiBD,CApBD,CAsBAP,QAAQ,CAACyB,MAAT,CACA,oBAAC,cAAD,EAAgB,MAAM,CAAEX,MAAxB,EACE,oBAAC,GAAD,MADF,CADA,CAGmBY,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHnB,EAKA;AACA;AACA;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './styles/index.css';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport './styles/index.css';\nimport { Home, Create, Quote, Quotes, NotFound, User, Login, Landing, Policy } from './sections';\nimport * as serviceWorker from './serviceWorker';\nimport { Layout } from 'antd';\nimport { Viewer } from './lib/types';\n\nconst client = new ApolloClient({\n  uri: '/api'\n});\n\nconst initialViewer = {\n  _id: null,\n  token: null,\n  avatar: null,\n  didRequest: false\n}\n\nconst App = () => {\n  const [viewer, setViewer] = useState<Viewer>(initialViewer);\n\n  return (\n  <Router>\n    <Layout id=\"app\">\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/login\" render={props => <Login {...props} setViewer={setViewer} />} />\n        <Route exact path=\"/privacy-policy\" component={Policy} />\n        <Route exact path=\"/Home\" component={Home} />\n        <Route exact path=\"/create\" component={Create} />\n        <Route exact path=\"/quote/:id\" component={Quote} />\n        <Route exact path=\"/quotes/:category?\" component={Quotes} />\n        <Route exact path=\"/user/:id\" component={User} />\n        <Route component={NotFound} />\n      </Switch>\n    </Layout>\n  </Router>\n  );\n}\n\nReactDOM.render(\n<ApolloProvider client={client}>\n  <App />\n</ApolloProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}